apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.alexeymerov.unsplashviewer"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "1.1"
        vectorDrawables.useSupportLibrary = true
        resConfigs "en", "ru"
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
//            ndk {
//                abiFilters "arm64-v8a", "armeabi-v7a"
//            }

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildOutputApkName(applicationVariants)
        }
        debug {
            minifyEnabled false
            shrinkResources false
            buildOutputApkName(applicationVariants)
        }
    }

    lintOptions {
        lintConfig file("lint.xml")
        baseline file("baseline-lint.xml")
//        warningsAsErrors = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def buildOutputApkName(DomainObjectSet domainObjectSet) {
    domainObjectSet.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "UV_${variant.baseName}_" + new Date().format('(dd.MM.yy)_(HH)') + ".apk"
        }
    }
}

ext {
    supportLib = '1.1.0-alpha04'
    retrofit = '2.3.0'
    koin = '1.0.1'
    anko = '0.10.4'
    glide = '4.8.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    debugImplementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'

    //support
    implementation "com.google.android.material:material:${supportLib}"
    implementation "androidx.recyclerview:recyclerview:1.1.0-alpha02"
    implementation "androidx.legacy:legacy-support-v13:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit}"

    // rx
    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.1'

    //rx libs
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1'

    // koin
    implementation "org.koin:koin-core:${koin}"
    implementation "org.koin:koin-android:${koin}"
    implementation "org.koin:koin-androidx-viewmodel:$koin"

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.1.0-alpha02'

    //permissions with dsl
    implementation 'com.github.fondesa:kpermissions:1.0.0'

    // anko
    implementation "org.jetbrains.anko:anko-commons:$anko"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
}

androidExtensions {
    experimental = true
}
